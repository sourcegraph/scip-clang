name: ci

on:
  push:
    branches: ["docker-build"]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      revision:
        description: "Tag or revision to build binaries for"
        type: string
        required: true
      create_release:
        description: "Should publish the binary or not"
        required: true
        default: "false"

env:
  REGISTRY_IMAGE: sourcegraph/scip-clang

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04-32core-graph-team-amd64
            platform: linux/amd64
            binary_name: scip-clang-x86_64-linux
          - os: ubuntu-22.04-32core-graph-team-arm64
            platform: linux/arm64
            binary_name: scip-clang-arm64-linux
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}-${{ matrix.binary_name }}
          repository-cache: true

      - name: Build binary
        run: bazel build //indexer:scip-clang --config release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: bazel-bin/indexer/scip-clang
          name: ${{ matrix.binary_name }}
          if-no-files-found: error

  build-docker:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux/amd64
            binary_name: scip-clang-x86_64-linux
          - os: ubuntu-22.04-arm
            platform: linux/arm64
            binary_name: scip-clang-arm64-linux
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download pre-built binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: /tmp/binary

      - run: cp /tmp/binary/scip-clang ./scip-clang && ls -l ./scip-clang

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge_docker:
    runs-on: ubuntu-latest
    needs: [build-docker]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Snapshot metadata
        if: github.ref == 'refs/heads/docker-build'
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest-snapshot

      - name: Tag metadata
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.PATCH }}
            type=raw,value=${{ env.MINOR }}
            type=raw,value=${{ env.MAJOR }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
